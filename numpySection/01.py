import numpy as np
import numpy.ma as ma
from random import sample
# ğŸ“Œ Zadanie 1: Slicing + modyfikacja
# StwÃ³rz tablicÄ™ NumPy o wartoÅ›ciach od 0 do 99. ZamieÅ„ wartoÅ›ci w ostatnich 10 pozycjach na -1.

# array = np.array((range(0,100)))

# array[90:] = -1

# print(array)

#ğŸ“Œ Zadanie 2: Operacje element-wise
# Masz tablicÄ™ arr = np.array([1, 2, 3, 4, 5]). PodnieÅ› kaÅ¼dy element do kwadratu, a nastÄ™pnie odejmij 2.

# arr = np.array([1, 2, 3, 4, 5])

# arr = arr**2 - 2
# print(arr)

# ğŸ“Œ Zadanie 3: Indeksowanie warunkowe
# Wygeneruj tablicÄ™ losowÄ… 100 liczb caÅ‚kowitych od 0 do 20. WyodrÄ™bnij tylko liczby wiÄ™ksze niÅ¼ 10 i podziel je przez 2.


# arr = np.array(np.random.randint((20), size=100))
# arr = arr[arr > 10] / 2
# print(arr)



# ğŸ“Œ Zadanie 4: Tworzenie maski logicznej
# Zbuduj maskÄ™ logicznÄ…, ktÃ³ra wskaÅ¼e, 
# ktÃ³re wartoÅ›ci w tablicy arr = np.array([5, np.nan, 7, 3, np.nan, 10]) sÄ… liczbami (czyli nie sÄ… NaN), i uÅ¼yj jej do wyodrÄ™bnienia tych wartoÅ›ci.

# arr = np.array([5, np.nan, 7, 3, np.nan, 10])

# arr = arr[~np.isnan(arr)]
# print(arr)


# ğŸ“Œ Zadanie 5: Transformacje ksztaÅ‚tu
# StwÃ³rz tablicÄ™ NumPy od 1 do 12, a nastÄ™pnie przeksztaÅ‚Ä‡ jÄ… w tablicÄ™ 3x4. ZamieÅ„ jÄ… na jednowymiarowÄ… w moÅ¼liwie najbardziej pÅ‚aski sposÃ³b.


# arr = np.array(range(1,13))
# arr = np.reshape(arr,(3,4))
# arr = arr.flatten()
# print(arr)


# ğŸ“Œ Zadanie 6: LosowoÅ›Ä‡ i reproducja
# Wylosuj tablicÄ™ 5Ã—5 liczb zmiennoprzecinkowych z przedziaÅ‚u 0â€“1, ale tak, by za kaÅ¼dym razem wyniki byÅ‚y identyczne (tzn. seed).

# np.random.seed(100)
# arr = np.array(np.random.uniform(low=0,high=1,size=(5,5)))
# print(arr)

# ğŸ“Œ Zadanie 7: Histogram z danych
# Wygeneruj 1000 liczb z rozkÅ‚adu normalnego i policz ile z nich mieÅ›ci siÄ™ w przedziale od -1 do 1.

# arr = np.array(np.random.normal(size=1000))

# count = arr[(arr > -1) & (arr < 1)].shape
# print(count)


# ğŸ“Œ Zadanie 8: Zamiana wartoÅ›ci
# Masz tablicÄ™ arr = np.array([1, 2, 3, 4, 5]). ZamieÅ„ wartoÅ›ci wiÄ™ksze niÅ¼ 3 na 99.

arr = np.array([1, 2, 3, 4, 5])

arr = np.where(arr > 3,99,arr)
# print(arr)

# ğŸ“Œ Zadanie 9: Agregacje i unikalnoÅ›Ä‡
# StwÃ³rz tablicÄ™ losowych wartoÅ›ci caÅ‚kowitych 0â€“9 o rozmiarze 100. Policz liczbÄ™ wystÄ…pieÅ„ kaÅ¼dej wartoÅ›ci.

array = np.array(np.random.randint(low=0,high=9,size=100))
uniqueArr = np.unique_counts(array)
vals, counts = np.unique(arr, return_counts=True)
# print(dict(zip(vals, counts)))
# print(uniqueArr)

# ğŸ“Œ Zadanie 10: WybÃ³r i losowanie
# Z tablicy 1D 100 elementÃ³w wybierz 10 unikalnych, losowych wartoÅ›ci bez powtÃ³rzeÅ„.

#arr = np.arange(100)
# sampled = np.random.choice(arr, size=10, replace=False)
# print(sampled)